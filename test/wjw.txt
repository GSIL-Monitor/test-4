########################

生产机-08	4核8G	10.1.27.148	jxjy	sdgfas#24$#@D	   已做limit	eureka,zuul
生产机-09	4核8G	10.1.27.149	jxjy	DW4t5sfg$@r5rgr	   已做limit	eureka,zuul
生产机-10	4核8G	10.1.27.150	jxjy	hky$%657(yhdefer 已做limit	springboot1
生产机-11	4核8G	10.1.27.51	jxjy	fyjtr%4745cDfdg	   已做limit	springboot2
生产机-11	4核8G	10.1.27.112	jxjy	Ty4cY^GFdcIfoN0IJ_
########################
select count(DISTINCT t.id)  from cv_set t left join cv_set_authorization csa on csa.CV_SET_ID = t.id left join cv_set_authorization_region csar on csar.AUTHORIZATION_ID = csa.id where 1=1 AND csa.CV_SET_START_DATE <= CURDATE() AND csa.CV_SET_END_DATE >= CURDATE() and t.status =5 and t.forma != 5  and t.id in (select DISTINCT(ccc.CV_SET_ID) from cv_set_authorization_region csar left join cv_set_authorization ccc on ccc.id = csar.AUTHORIZATION_ID where csar.PROP_VAL_ID = 111000001)  and t.id in (select DISTINCT(CV_SET_ID) from cv_set_authorization csa left join cv_set_authorization_system_site csass on csass.AUTHORIZATION_ID = csa.ID left join system_site ss on csass.SYSTEM_SITE_ID=ss.id where ss.DOMAIN_NAME='dev.ncme.org.cn')  and t.id in (select distinct(cvim.cv_set_id) from CV_SET_USER_IMAGE cvim where USERIMAGE_ID in (select ip.userimage_id from qm_user_image_prop ip where prop_id in (select DISTINCT sspv.ID from sub_sys_prop_val sspv LEFT JOIN exam_prop_val epv ON epv.ID = sspv.PROP_VAL_ID where epv.`NAME` ='精神病与精神卫生学')))
VPN 账号
caoyange 
0u@GF6Io2VMW2b 



+++=
########################
datasource.url=jdbc:mysql://10.1.27.252:3323/cpd_test
datasource.username=root
datasource.password=hVVii#O%1!N2@eS6
######################################
datasource.url=jdbc:mysql://10.1.27.252:3323/zcpd_test
datasource.username=zroot
datasource.password=hVVii#O%1!N2@eS6
########################
线上数据库控制台
http://10.1.27.252:3324/page/index.html
ecloud/ecloud
###############
240数据库控制台
http://10.1.27.240:3324/page/index.html
wjw_user1/123456
#################
jenkins物理机
10.1.27.116
ubuntu/china-ops
####################
10.1.27.240
操作系统
root
YTZiMzEzZmUzOWQ2OTJkN2FkY2E4ODY0
####################
10.1.27.252 操作系统
root
YTZiMzEzZmUzOWQ2OTJkN2FkY2E4ODY0

#################
redis服务
10.1.27.98  端口 6379
10.1.27.106 端口 6379
10.1.27.108 端口 6379
#############
STUDYWEB-1071：
ExamPropValJDBCDAO:
public ExamReturnProp getNextLevelProp(ExamPropQuery propQuery) 
ExamReturnProp r_prop = new ExamReturnProp();
		String sql = "select t.*, v.id as prop_val_id,p.name as typeName, tt.prop_type_name as c_type_name,(select count(1) from qm_user_image_prop where  PROP_ID=?) as hasProjectNum  "
				+ "from exam_prop_val t, sub_sys_prop_val v, prop_val_ref r,sub_sys_prop p,exam_prop_type tt "
				+ "where t.id = v.prop_val_id and v.id = r.prop_val2 and p.id = v.sys_prop_id and tt.prop_type = t.c_type and r.prop_val1 = ? and t.name like ? ";
		String sql_size = "select count(1) from exam_prop_val t, sub_sys_prop_val v, prop_val_ref r,sub_sys_prop p,exam_prop_type tt "
				+ "where t.id = v.prop_val_id and v.id = r.prop_val2 and p.id = v.sys_prop_id and tt.prop_type = t.c_type and r.prop_val1 = ? and t.name like ?";
		
		if(propQuery.getExt_type() != null && propQuery.getExt_type() > 0) {
			sql += "and t.ext_type=" + propQuery.getExt_type();
			sql_size += "and t.ext_type=" + propQuery.getExt_type();
		}
		
		sql += " order by t.code";
		
		String searchName = propQuery.getName();
		if (searchName == null) searchName = "%";
		else searchName = "%" + searchName + "%";
		
		List<ExamProp> returnList = getJdbcTemplate().query(PageUtil.getPageSql(sql, propQuery.getPageNo(), propQuery
				.getPageSize()), ParameterizedBeanPropertyRowMapper.newInstance(ExamProp.class),propQuery.getSysPropId(), propQuery.getSysPropId(), searchName);
##############
#######
启动分布式数据库
240
/usr/local/hotdb/hotdb-server/bin
./hotdb_server start
###
apple
!@#$qazwsxedcrfv5TGB
################################
10.1.27.139
jxjy
df#$11EfdFg324!
  专项能力测试机
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
10.1.27.116
用户名是ubuntu
china-ops
密码是123
/var/opt
在这个目录下面  
  
################################
10.1.27.146
jxjy
jd$%sdf9456srdgf
云主机，压力测试
10.1.27.145
jxjy
6tw34gh#@$sefgtrhy
云主机，压力测试
################################

testlink:
http://www.testlink.org.cn
update log_study_cv_unit set `STATUS`=2 where  CV_ID=1228 and SYSTEM_USER_ID=23479;
update log_study_cv_set set  STATE=2 where CV_SET_ID=102 and SYSTEM_USER_ID=23479;
#######
公司邮箱：
caoyange@weeho.cn
#1qaz2wsx3EDC4RFV
#######
java -jar springboot-0.0.1-SNAPSHOT.jar  --server.port=8003
java -jar springboot-0.0.1-SNAPSHOT.jar --spring.profiles.active=test --server.port=8000
ps -ef|grep -v grep|grep springboot-0.0.1-SNAPSHOT.jar|awk '{print $2}'|xargs kill -9

nohup java -Xmx256m -Xms128m -Xmn128m -jar eureka-server-0.0.1-SNAPSHOT.jar >eurekaSserver.log 2>&1 &
nohup java -Xmx256m -Xms128m -Xmn128m -jar zuul-0.0.1-SNAPSHOT.jar >zuul.log 2>&1 &



nohup java -Xmx512m -Xms256m -Xmn128m -jar eureka-server-0.0.1-SNAPSHOT.jar >eurekaserver.log 2>&1 &

nohup java -Xmx1024m -Xms512m -Xmn128m -jar eureka-server-0.0.1-SNAPSHOT.jar >eurekaserver.log 2>&1 &

nohup java -Xmx1024m -Xms512m -Xmn512m -jar zuul-0.0.1-SNAPSHOT.jar >zuul.log 2>&1 &



nohup java -Xmx512m -Xms256m -Xmn256m -jar zuul-0.0.1-SNAPSHOT.jar >zuul.log 2>&1 &

nohup java -Xmx2048m -Xms1024m -Xmn1024m -jar springboot-0.0.1-SNAPSHOT.jar  --envCong=pre150 >springboot9090.log  2>&1 &
nohup java -Xmx2048m -Xms1024m -Xmn1024m -jar springboot-0.0.1-SNAPSHOT.jar  --envCong=pre150 --server.port=9096 >springboot9096.log  2>&1 &

nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT.jar --spring.profiles.active=test --server.port=9092 >springboot9092.log 2>&1 &
nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT.jar --server.port=9096 >springboot9096.log 2>&1 &

nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT.jar --server.port=9097 >springboot9097.log 2>&1 &
nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT.jar >springboot9090.log 2>&1 &
nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT.jar >springboot9090.log 2>&1 &
######
删除手机号关联的表：
select * from system_user where  mobil_phone like '%18813168732%';
DELETE FROM system_user_prop_val WHERE USER_ID = 3327559;
DELETE FROM log_study_cv_set WHERE SYSTEM_USER_ID = 3327559;
DELETE FROM log_study_cv_unit WHERE SYSTEM_USER_ID = 3327559;
DELETE FROM system_user_config WHERE USER_ID = 3327559;
delete  from cv_set_score_log where SYSTEM_USER_ID=3324059;

delete  from cv_set_favorites where SYSTEM_USER_ID=4825454;
DELETE FROM system_user WHERE ID = 3327559;
/**DELETE FROM system_account WHERE ACCOUNT_NAME LIKE '%在路上%';**/
DELETE FROM system_account WHERE ACCOUNT_id in(3327559,3327559);

/**DELETE FROM system_account WHERE ACCOUNT_id in(3326107,3327556);*/

select * from system_account where account_name LIKE '%18813168732%';

SELECT  * from system_timeliness where mobile_phone = 18813168732

delete from system_timeliness where mobile_phone = 18813168732


#########################
vmware
root
123456james
##########################
测试账号：wanbing
Qq123456
18701680748
##########################
 scp -r qiantai jxjy@10.1.27.105:/data/tomcat8/webapps/
 
 
  scp -r resource jxjy@10.1.27.105:/data/tomcat8/webapps/
  scp -r resource jxjy@10.1.27.94:/data/tomcat8/webapps/
  scp -r resource jxjy@10.1.27.103:/data/tomcat8/webapps/
################
内网服务器地址
192.168.1.78
administrator
weeho_ZZ123
###
git 仓库同步： http://blog.csdn.net/lindexi_gd/article/details/72171157
##############
公钥地址：
D:\workspace
邮件：caoyange0412@163.com
passphrase:caoyg

######################
 cp -r /data/admin /data/devTomcat8/webapps/
 cp -r /data/resource  /data/devTomcat8/webapps/
 cp -r /data/qiantai /data/devTomcat8/webapps/
 cp -r /data/ncmeapp /data/devTomcat8/webapps/
 
 
  cp -r admin_lib /data/devTomcat8/webapps/admin/WEB-INF/classes/
   cp -r resource_lib /data/devTomcat8/webapps/resource/WEB-INF/classes/
   cp -r lib /data/devTomcat8/webapps/qiantai/WEB-INF/classes/
   cd /data/devTomcat8/webapps/admin/WEB-INF/classes/
   mv admin_lib lib
########################
公司jenkins地址

http://jenkins.ncme.org.cn
admin
Super123
#wjwJenkinsSuperAdmin
dev_developer/dev_developer_246
springboot_developer/springboot_developer_9986
test_developer/test_developer_00291
zx_developer/zx_developer_0089
pre_admin/admin_pre_12345



Jenkins

jenkins.weeho.cn


admin

cf57a1eb8457427a945820cf31c493c6


######################
keepalive :https://www.cnblogs.com/MYue/p/7084072.html
nginx 虚拟IP：     http://localhost:10001/caladd/add?a=6&b=16&accesstoken=1
http://www.linuxidc.com/Linux/2015-08/122113.htm
http://m.blog.csdn.net/jiachengwin/article/details/75106861
zuul集群
	Zuul：构建高可用网关之多维度限流
	https://segmentfault.com/a/1190000012252677

nginx 集群例子：http://m.blog.csdn.net/jiachengwin/article/details/75106861
######################################
springboot docker 打包部署,运维的好例子
http://blog.csdn.net/hguisu/article/details/51072683

#######################################
专项系统 http://zxnl.ncme.org.cn/main admin 123123

二期开发环境dev.ncme.org.cn：10.1.27.106   jxjy   OYG4cwP8p4JQGc!d   data/devTomcat8 8090 dev开发服务器
二期的数据库暂时用  10.1.27.106:3306/ncme_v2 账号：root 密码：root

################
url=jdbc:mysql://10.1.27.240:3323/cpd_test?useUnicode=true&amp;characterEncoding=utf-8
username=root
password=1N%HQ#QX8VLD0roW


jdbc:mysql://10.1.27.97:3306/cpd_test?useUnicode=true&amp;characterEncoding=utf-8
cpd_test
hVVii#O%1!N2@eS6
###################

数据库地址：10.1.27.240:3323/CPD_TEST   root  1N%HQ#QX8VLD0roW  外网：111.206.238.131
10.1.27.240：3324 用户名/密码：wjw_user1/123456
###############
nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT.jar &



nohup java -Xmx1024m -Xms512m -Xmn512m -jar eureka-server-0.0.1-SNAPSHOT.jar >eurekaSserver.log 2>&1 &

nohup java -Xmx1024m -Xms512m -Xmn512m -jar zuul-0.0.1-SNAPSHOT.jar >zuul.log 2>&1 &


nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT9096.jar >springboot9096.log 2>&1 &

nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT9091.jar >springboot9091.log 2>&1 &


nohup java -Xmx1024m -Xms512m -Xmn128m -jar springboot-0.0.1-SNAPSHOT.jar >springboot9090.log 2>&1 &

查看端口
netstat –apn|grep 9090

---默认输出到nohup.out中

nohup java -jar XXX.jar &  

#########################
app URL
http://10.1.27.106:8090/ncmeapp/#/
##########################
jar 文件和jar命令分开执行的例子
nohup java  -server -Djava.security.egd=file:///dev/urandom -Xms2048m -Xmx2048m -XX:PermSize=512m -cp canal2es.jar:../resources/:$LIB_JARS  -DLOG.DIR=../logs -DLOG.NAME=canal2es1  com.tydic.canal2es.deployer.Canal2EsLauncher  $ID  $PROCESS_num $THREAD_num>/dev/null 2> ../logs/canal2es_startup.log &



###########################

生产数据库配置：
10.1.27.50:3323
root
hVVii#O%1!N2@eS6
###########################
	spring boot默认加载文件的路径是 
	/META-INF/resources/ 
	/resources/ 
	/static/ 
	/public/ 
	这些目录下面, 从spring boot源码也可以看到 
	private static final String[] CLASSPATH_RESOURCE_LOCATIONS = {  
	        "classpath:/META-INF/resources/", "classpath:/resources/",  
	        "classpath:/static/", "classpath:/public/" };  
	
	所有本地的静态资源都配置在了classpath下面了, 而非在webapp下了 
###########################
	当maven依赖本地而非repository中的jar包，sytemPath指明本地jar包路径
	<dependency>
	    <groupId>org.hamcrest</groupId>
	    <artifactId>hamcrest-core</artifactId>
	    <version>1.5</version>
	    <scope>system</scope>
	    <systemPath>${basedir}/WebContent/WEB-INF/lib/hamcrest-core-1.3.jar</systemPath>
	</dependency>
#########################

1、applicationContext_jndi.xml		--	数据库连接   
2、ncme.properties			私有云服务器配置修改	--	项目配置项（adminURL、peixunURL、qiantaiURL）
3、log4j.properties							--	日志输出路径
4、项目下必须存在upload目录
5、删除WebRoot目录下的courseList.html、index.html页面
6、生成静态化文件（可选）。http://10.1.27.106:8080/qiantai_sec/first.do?eh=626

#############################
1 UnderTow 简介
	https://www.jianshu.com/p/9710585258fb
	Undertow是Jboss开发的一款基于XNIO的高性能 Web 服务器，并且兼容servlet3.1，在spring boot中很容易利用starter来替换掉tomcat作为服务容器。
	将pom.xml中的dependencies修改如下：
		<dependencies>
	    <!--Spring boot starter-->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-web</artifactId>
	        <exclusions>
	            <exclusion>
	                <groupId>org.springframework.boot</groupId>
	                <artifactId>spring-boot-starter-tomcat</artifactId>
	            </exclusion>
	        </exclusions>
	    </dependency>
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-undertow</artifactId>
	    </dependency>
	    <!--/Spring boot starter-->
	</dependencies>
	
	链接：https://www.jianshu.com/p/9710585258fb
	
	HTTP2作为新的HTTP标准，目前在Undertow上已经可以被很好地支持了，而在代码中只需要配置下，就可以启用HTTP2作为web的协议：
	
	// 在@Configuration的类中添加@bean
	@Bean
	UndertowEmbeddedServletContainerFactory embeddedServletContainerFactory() {
	    
	    UndertowEmbeddedServletContainerFactory factory = new UndertowEmbeddedServletContainerFactory();
	    
	    // 这里也可以做其他配置
	    factory.addBuilderCustomizers(builder -> builder.setServerOption(UndertowOptions.ENABLE_HTTP2, true));
	    
	    return factory;
	}
	
	作者：whthomas
	链接：https://www.jianshu.com/p/9710585258fb
	來源：简书
	著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
	
	与tomcat的配置不同，在application.properties中的配置：
	
	# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
	server.undertow.io-threads=4
	# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
	server.undertow.worker-threads=20
	# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
	# 每块buffer的空间大小,越小的空间被利用越充分
	server.undertow.buffer-size=1024
	# 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
	server.undertow.buffers-per-region=1024
	# 是否分配的直接内存
	server.undertow.direct-buffers=true
	
	作者：whthomas
	链接：https://www.jianshu.com/p/9710585258fb
	來源：简书
	著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
2： JWT：组件介绍：
对发布的API增加授权保护是非常必要的。利用JWT技术为API增加授权保护，保证只有获得授权的用户才能够访问API。
http://blog.csdn.net/haiyan_qi/article/details/77373900
3:  参考JsonTestBean
	3.1 由bean向json转换：
	  	当bean和json属性不匹配，在bean的属性上或是get***方法上 加上@JSONField(name = "**") name是json属性值,json属性区分大小写
	3.2 由json向bean转换时候：
	 	当bean和json属性不匹配，在bean的属性上或是get***方法上 加上@JSONField(name = "**") name是json属性值,json属性不区分大小写
	 	如果json中有下划线，默认变成驼峰型
	 	
	备注：注解放在set***方法上，没有效果，不启作用
	
/**
openlayers
https://cesiumjs.org/   
https://cn.vuejs.org/index.html
http://www.gdal.org/  卫星遥感处理
https://github.com/nasa-gibs/onearth
https://github.com/nasa-gibs/worldview'
https://www.windy.com/overlays?36.880,116.499,5   较好的可视化效果
#############
象辑科技
openlayers
https://cesiumjs.org/   
https://cn.vuejs.org/index.html
http://www.gdal.org/  卫星遥感处理
https://github.com/nasa-gibs/onearth
https://github.com/nasa-gibs/worldview
*/

######
tcxlx.cn/admin.php
lengsad
lhc123

##########
D:\Python27\;D:\Python27\Scripts;
##########

融易聘的博客

http://localhost:8080/qiantai/study/logstudy.do?mode=saveVideoStudyLog&logStudyCvUnitId=1253&cvId=768&cvUnitId=2964&videoLength=1196&videoPlayLength=1196&startDate=2018-04-12%2018:14:16

select * from system_login_limit


项目人物画像
select * from cv_set_user_image t where cv_set_id=4800448

##
STUDYADMIN-1725	项目发布-已发布列表，加载时间超过1分钟（1分6秒）/---服务进不去
STUDYADMIN-1724	数据统计-面授项目统计页面，加载时间超过3秒（16秒）/5秒
	STUDYADMIN-1723	系统维护-审查日志页面，加载时间超过3秒（11秒）/11秒
STUDYADMIN-1722	系统维护-账号管理页面，加载时间超过3秒（5秒）/5秒
STUDYADMIN-1721	系统维护-编辑管理页面，加载时间超过3秒（32秒）/22秒
	STUDYADMIN-1720	系统维护-学员管理页面，加载时间超过3秒（28秒）/28秒
STUDYADMIN-1717	项目管理-项目审核页面，加载时间超过3秒（9秒）/ 8秒
STUDYADMIN-1716	项目管理-项目管理页面，加载时间超过3秒（1分2秒）/5秒
STUDYADMIN-1715	项目管理-我的学科页面，加载时间超过1分钟，最后404/----服务进不去
STUDYADMIN-1714	项目管理-我的项目页面，加载时间超过3秒（32秒）/6秒
STUDYADMIN-1713	能力管理-学习地图页面，加载时间超过3秒（6秒）/5.4
RESOURCE-911	病例审核-已审核列表，加载时间超过3秒（5秒）/4.1秒
RESOURCE-910	素材审核-已审核列表，加载时间超过3秒（18秒）/18秒多
	RESOURCE-909	素材管理-素材审核页面，加载时间超过3秒（7秒）/6.8秒
	RESOURCE-908	素材管理-素材页面，加载时间超过3秒（11秒）/11秒
	RESOURCE-907	题库管理-审核试题页面，加载时间超过3秒（8秒）/8秒
RESOURCE-906	题库管理-题库管理页面，加载时间超过3秒（7秒）/7秒
STUDYWEB-1168	个人中心-账号管理页面，页面加载时间超过3秒（5秒）/4.5秒